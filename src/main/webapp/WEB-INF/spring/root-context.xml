<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xmlns:mvc="http://www.springframework.org/schema/mvc"
 xmlns:context="http://www.springframework.org/schema/context"
 xmlns:tx="http://www.springframework.org/schema/tx"
 xsi:schemaLocation="http://www.springframework.org/schema/beans
https://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/mvc
http://www.springframework.org/schema/mvc/spring-mvc.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx.xsd">	
	<!-- Root Context: defines shared resources visible to all other web components -->
	
	<!-- 1. DataSource 설정 -->
<!-- 	<bean id="ds" class="oracle.jdbc.pool.OracleDataSource"	destroy-method="close">
		<property name="dataSourceName" value="ds"></property>
		<property name="URL" value="jdbc:oracle:thin:@172.16.3.15:1521:xe"></property>
		<property name="user" value="scott"></property>
		<property name="password" value="tiger"></property>
	</bean> -->
	<bean id="ds" class="oracle.jdbc.pool.OracleDataSource"	destroy-method="close">
		<property name="dataSourceName" value="ds"></property>
		<property name="URL" value="jdbc:oracle:thin:@nftdatabase.cxoypnp2ldbw.ap-northeast-2.rds.amazonaws.com:1521:NFT"></property>
		<property name="user" value="nft"></property>
		<property name="password" value="nftauction"></property>
	</bean>
	
	<!-- 2. SqlSessionFactory 설정 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="ds" />
		<property name="configLocation" value="classpath:/mybatis-config.xml" />
		<property name="mapperLocations" value="classpath:mappers/*.xml" />
		<!-- classpath == src/main/resources -->
	</bean>		
	
	<!-- 3. SqlSession 설정 -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" 
		destroy-method="clearCache">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>
	
	<!-- 문자열 리소스를 bean으로 추가 -->
	<bean id="uploadPath" class="java.lang.String">
		<constructor-arg value="C:\\Study\\FileUpload"> <!-- 파일경로 -->
		</constructor-arg>
	</bean>

	<!-- Gmail -->
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl"> 
	     <property name="host" value="smtp.gmail.com" />
	     <property name="port" value="587" />
	 	<property name="username" value="nft.auction.help@gmail.com"/> <!-- 자신의 이메일 아이디 -->
	 	<property name="password" value=""/> <!-- 자신의 비밀번호 -->
	 	<!-- 보안연결 TLS과 관련된 설정 -->
		<property name="javaMailProperties">
		<props>
			<prop key="mail.smtp.auth">true</prop>
			<prop key="mail.smtp.starttls.enable">true</prop>
			<prop key="mail.transport.protocol">smtp</prop>
			<prop key="mail.debug">true</prop>
			<prop key="mail.smtp.ssl.trust">smtp.gmail.com</prop>
			<prop key="mail.smtp.ssl.protocols">TLSv1.2</prop>
		</props>
		</property>
	</bean>

	<!-- Spring에서 제공하는 DB Transaction Manager를 bean으로 등록 -->
	<bean id="transactionManager" 
	class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="ds"></property>
	</bean>
	
	<!-- 트랜잭션 관리를 수행하는 Aspect를 annotation 기반으로 사용 -->
	<tx:annotation-driven/>
	
	<!-- 
	base-package 밑의 클래스들 중에서 @Component로 등록된 클래스들을 bean으로 생성해서 관리함
	Persistence/Service Layer의 컴포넌트 클래스들을 bean으로 등록함
	 -->	
	<context:component-scan base-package="project.spring.nft"></context:component-scan>
		 
</beans>
